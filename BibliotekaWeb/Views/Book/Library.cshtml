@using BibliotekaWeb.Core
@using BibliotekaWeb.Core.Repositories.ViewModels
@model List<BookWithNumViewModel>

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h1 class="text-primary">List of Books</h1>
        </div>
        <div class="col-6 text-end">
            @if (User.Identity.IsAuthenticated){
                if (User.IsInRole(Constants.Roles.Administrator)) {
                    <a asp-controller="Book" asp-action="AddBook" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> &nbsp; Add Book
                    </a>
                }
            }
        </div>
    </div>
</div>

<br />

@if (User.Identity.IsAuthenticated) {
    if (User.IsInRole(Constants.Roles.User)) {

        <table class="table table-bordered text-white table-striped" style="width:100%">
            <thead>
                <tr>
                    <th class="text-center" style="width:30%">Name</th>
                    <th class="text-center" style="width:30%">Author</th>
                    <th class="text-center" style="width:30%">Do you want to reserve the book?</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-center">@item.Book.Name</td>
                        <td class="text-center">@item.Book.Author</td>
                        <td class="text-center">

                            @{
                                string msg = "nothing";

                             switch(item.Status){
                                case Enums.ActiveStatus.reserved:
                                    msg = "The book is already reserved";
                                    break;
                                case Enums.ActiveStatus.pendingForReserve:
                                    msg = "Pending reservation";
                                    break;
                                case Enums.ActiveStatus.pendingForReturn:
                                    msg = "Pending for return";
                                    break;
                                case Enums.ActiveStatus.aboveTheLimit:
                                    msg = "U already have maximum books";
                                    break;
                                case Enums.ActiveStatus.noAvailableBooks:
                                    msg = "There are no available copies";
                                    break;
                                default:
                                    msg = "Reserve the book";
                                    break;
                                }
                            }

                            @if(msg == "Reserve the book"){
                                <a asp-controller="Reservation" asp-action="ReserveBook" asp-route-id=@item.Book.BookId class="btn btn-primary" style="width:70%; color:aliceblue">
                                    @msg
                                </a>
                            }
                            else{
                                <a id=@item.Book.Name asp-controller="Reservation" asp-action="ReserveBook" class="btn btn-primary" style="pointer-events:none; background-color:red; width:70%">
                                    @msg
                                </a>
                            }

                        </td>
                    </tr>
                }
        </table>
        
    }

    else if (User.IsInRole(Constants.Roles.Administrator)) {

        <table class="table text-white table-bordered table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Author</th>
                    <th>Available copies</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Book.Name</td>
                        <td>@item.Book.Author</td>
                        <td>@item.NumberOfAvailableCopies</td>
                    </tr>
                }
        </table>
    }
}

@if (!User.Identity.IsAuthenticated) {

    <table class="table text-white table-bordered table-striped" style="width:100%">
        <thead>
            <tr>
                <th>Name</th>
                <th>Author</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Book.Name</td>
                    <td>@item.Book.Author</td>
                </tr>
            }
    </table>
}

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="~/js/Library.js"></script>

